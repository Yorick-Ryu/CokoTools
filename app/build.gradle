plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.10'
    id 'com.google.protobuf' version '0.9.0'
    id 'dev.rikka.tools.refine' version '4.1.0'
}

int incrementRefine() {
    Properties properties = new Properties()
    String fileName = "custom.properties"
    def key = "build.refine"
    File propertyFile = new File(rootDir.getAbsoluteFile(), fileName)
    properties.load(propertyFile.newDataInputStream())
    def refine = properties.getProperty(key).toInteger() + 1
    properties.setProperty(key, refine.toString())
    properties.store(propertyFile.newDataOutputStream(), 'Increment this value on every single build. ' +
            'You can access this value by calling BuildConfig.REFINE')
    return refine
}

def refine = incrementRefine()
android {
    signingConfigs {
        sign
    }
    namespace 'com.yorick.cokotools'
    compileSdk 33

    defaultConfig {
        applicationId "com.yorick.cokotools"
        minSdk 24
        targetSdk 33
        versionCode 6
        versionName "3.0.4" + "-lion-" + refine
        if (gradle.startParameter.taskNames.any { it.toLowerCase().contains("debug") }) {
            versionName += "-debug"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "int", "REFINE", refine.toString()
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'arm64-v8a', 'x86', 'armeabi-v7a', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
        debug {
            debuggable true
            signingConfig signingConfigs.sign
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        languageVersion = "2.0"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.7'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

def ksFile = rootProject.file('sign.properties')
def props = new Properties()
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))
    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['keystore.file'])
        android.signingConfigs.sign.storePassword props['keystore.password']
        android.signingConfigs.sign.keyAlias props['keystore.alias']
        android.signingConfigs.sign.keyPassword props['keystore.keyPassword']
        android.signingConfigs.sign.v1SigningEnabled true
        android.signingConfigs.sign.v2SigningEnabled true
    }
} else {
    android.signingConfigs.sign.storeFile = android.signingConfigs.debug.storeFile
    android.signingConfigs.sign.storePassword = android.signingConfigs.debug.storePassword
    android.signingConfigs.sign.keyAlias = android.signingConfigs.debug.keyAlias
    android.signingConfigs.sign.keyPassword = android.signingConfigs.debug.keyPassword
}

dependencies {
    compileOnly project(':hidden-api')
    // Kotlin
    implementation 'androidx.core:core-ktx:1.10.1'

    // Compose
    def composeBom = platform('androidx.compose:compose-bom:2023.05.01')
    implementation composeBom
    androidTestImplementation composeBom
    implementation 'androidx.compose.foundation:foundation'
    implementation 'androidx.compose.ui:ui'

    // Android Studio Compose Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Material Design
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'com.google.android.material:material:1.9.0'

    // LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation 'androidx.compose.runtime:runtime-livedata'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.1'

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.6.0"
    implementation 'io.coil-kt:coil-compose:2.2.2'

    // Accompanist
    def accompanist_version = "0.29.1-alpha"
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    // Room
    def room_version = "2.5.1"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    // Retrofit with Kotlin serialization Converter
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"

    // Kotlin serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1"

    // Datastore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.21.12"

    // Shizuku
    def shizuku_version = "13.1.0"
    implementation "dev.rikka.shizuku:api:$shizuku_version"
    implementation "dev.rikka.shizuku:provider:$shizuku_version"
    implementation "dev.rikka.tools.refine:runtime:4.1.0"
    implementation 'org.lsposed.hiddenapibypass:hiddenapibypass:4.3'

    // AppIconLoader
    implementation("me.zhanghai.android.appiconloader:appiconloader:1.5.0")

    // Bugly
    implementation 'com.tencent.bugly:crashreport:latest.release'

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

}